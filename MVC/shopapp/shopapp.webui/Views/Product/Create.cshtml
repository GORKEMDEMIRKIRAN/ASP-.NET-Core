

@model Product
@* burada isim olarak tanımladığımız değişkenleri yanlış yazabiliriz.
Bunun için product buraya tanımlayarak product bulunan değişkenler
isimlerine göre input isimlerini verebiliriz. *@
@* örnek olarak
    <div class="form-group">
        <label for="Name">Name</label>
        <input asp-for="Name" class="form-control">   ------
    </div>
 *@
 @*  bu kısımlarda bigli girilmese bile string değşken null değer  alabilir
 ama decimal değeri null değer alamaz değer girilmeli bu kısımlarda bir hata
 mesajı vermiş ama projeyi web üzerinde içerik incelemesinde görebiliriz.
 Bu şekilde tanımlama sayesinde form güvenliği için kendi bir "requestverificationToken"
 oluşturmuş başka derste bunu göreceğiz.*@

<form method="POST">
    <div class="form-group">
        <label for="Name">Name</label>
        <input type="text" name="Name" class="form-control">
    </div>
    <div class="form-group">
        <label for="Price">Price</label>
        <input type="text" name="Price" class="form-control">
    </div>
    <div class="form-group">
        <label for="Description">Description</label>
        <textarea name="Description" class="form-control"></textarea>
    </div>
    <div class="form-group">
        <label for="ImageUrl">ImageUrl</label>
        <input type="text" name="ImageUrl" class="form-control">
    </div>
    <div class="form-group">
        <label for="CategoryId">CategoryId</label>
        <input type="text" name="CategoryId" class="form-control">
    </div>
    <button type="submit" class="btn btn-primary">Submit</button>
</form>


@* Forma girilen bilgiler hangi action metodona hangi yöntemle gödnerilecek
Bunu belirleyelim.
<form method="GET"> # button kısımda "action" metodu tanımazsam
yani <form action="" method="GET">
Controller içinde oluşturduğum "create" metoduna gidecektir.

girdiğim bilgileri submit yapınca btün bilgiler url kısmında görünür.

kullanıcı girilen veya arama kutusundaki sorgulama bilgilerini kullanıcı
link görmesin bunun için "post request" kullanalım.
 *@